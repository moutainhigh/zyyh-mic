package com.jkys.zyyh.mic.dao.mapper;

import com.jkys.zyyh.mic.dao.entity.MicMsg;
import com.jkys.zyyh.mic.dao.query.MicMsgQuery;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import java.util.List;
import java.util.Set;

@Mapper
public interface MicMsgMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mic_msg
     *
     * @mbg.generated Thu Jan 02 15:19:49 CST 2020
     */
    int insert(MicMsg record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mic_msg
     *
     * @mbg.generated Thu Jan 02 15:19:49 CST 2020
     */
    int insertSelective(MicMsg record);

    /**
     * id 升序
     * @param query
     * @return
     */
    List<MicMsg> queryList(MicMsgQuery query);

    MicMsg selectOne(MicMsgQuery query);

    /**
     * 更新消息重试次数
     *
     * @param id
     */
    @Update("update mic_msg set retry_count = retry_count + 1 where id = #{id}")
    void updateRetryCount(Long id);

    /**
     * 设置消息已消费
     * @param id
     */
    @Update("update mic_msg set is_consume = 1 where id = #{id}")
    void setMsgConsumed(Long id);

    int deleteByIds(@Param("idSet") Set<Long> idSet);

    /**
     * 未消费消息总数
     *
     * @return
     */
    @Select(" select count(0) from mic_msg where is_consume = 0 ")
    int unConsumeSum();
}